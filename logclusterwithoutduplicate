let TimeWindow = ago(5m);
// Cache recent pod activity data
let RecentPods = materialize(
    KubePodInventory
    | where TimeGenerated > TimeWindow
    | summarize 
        RecordCount = count(),
        LatestTime = max(TimeGenerated),
        NodeCount = dcount(Computer),
        RunningPods = sumif(1, PodStatus == "Running")
        by ClusterName
);
// Cache all clusters
let AllClusters = materialize(
    KubePodInventory
    | summarize by ClusterName
);
// Main query for active clusters
RecentPods
| project
    ClusterName,
    State = case(RecordCount > 0, "Up and Running", "Stopped or Destroyed"),
    CheckedTime = LatestTime,
    Notes = iff(
        RecordCount > 0,
        "Cluster is active with recent pod activity",
        "Verify cluster state with: az aks show --name ClusterName --resource-group <RG> --query provisioningState or Resource Graph: Resources | where type == 'microsoft.containerservice/managedclusters' and name == ClusterName"
    )
| union (
    // Inactive clusters (no recent activity)
    AllClusters
    | join kind=leftanti RecentPods on ClusterName
    | project
        ClusterName,
        State = "Stopped or Destroyed",
        CheckedTime = now(),
        Notes = "No recent log data. Verify cluster state with: az aks show --name ClusterName --resource-group <RG> --query provisioningState or Resource Graph: Resources | where type == 'microsoft.containerservice/managedclusters' and name == ClusterName"
)
| project ClusterName, State, CheckedTime
| order by ClusterName asc
