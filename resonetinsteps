Resources
| where type == "microsoft.containerservice/managedclusters"
| extend 
    AKSName = name,
    SubscriptionName = subscriptionId,
    ResourceGroup = resourceGroup,
    NetworkPlugin = properties.networkProfile.networkPlugin,
    PodCidr = properties.networkProfile.podCidr,
    ServiceCidr = properties.networkProfile.serviceCidr,
    NodePools = properties.agentPoolProfiles
| project 
    AKSName, SubscriptionName, ResourceGroup, NetworkPlugin, PodCidr, ServiceCidr, NodePools
| order by AKSName asc



Resources
| where type == "microsoft.containerservice/managedclusters"
| extend 
    AKSName = name,
    NodePools = properties.agentPoolProfiles,
    NodePoolCount = array_length(NodePools),
    TotalNodes = iff(array_length(NodePools) > 0, 
                     sumif(todynamic(NodePools).count, NodePools, todynamic(NodePools).enableAutoScaling == false) + 
                     sumif(todynamic(NodePools).nodeCount, NodePools, todynamic(NodePools).enableAutoScaling == true), 
                     0),
    MaxPodsPerNode = iff(array_length(NodePools) > 0, 
                         maxof(todynamic(NodePools).maxPods), 
                         30),
    NodePoolNames = iff(array_length(NodePools) > 0, 
                        make_list(todynamic(NodePools).name), 
                        make_list("N/A"))
| project 
    AKSName, NodePoolCount, TotalNodes, MaxPodsPerNode, NodePoolNames
| order by AKSName asc

Resources
| where type == "microsoft.containerservice/managedclusters"
| extend 
    AKSName = name,
    PodCidr = properties.networkProfile.podCidr,
    ServiceCidr = properties.networkProfile.serviceCidr,
    NodePools = properties.agentPoolProfiles,
    TotalNodes = iff(array_length(NodePools) > 0, 
                     sumif(todynamic(NodePools).count, NodePools, todynamic(NodePools).enableAutoScaling == false) + 
                     sumif(todynamic(NodePools).nodeCount, NodePools, todynamic(NodePools).enableAutoScaling == true), 
                     0),
    MaxPodsPerNode = iff(array_length(NodePools) > 0, 
                         maxof(todynamic(NodePools).maxPods), 
                         30)
| extend 
    PodCidrPrefix = toint(split(PodCidr, '/')[1]),
    TotalPodIps = iff(isnotempty(PodCidr), pow(2, 32 - PodCidrPrefix) - 2, 0),
    AllocatedPodIps = TotalNodes * (pow(2, 24 - 8) - 2),  // 254 IPs per node (/24)
    AvailablePodIps = max_of(TotalPodIps - AllocatedPodIps, 0),
    MaxPodsTotal = TotalNodes * MaxPodsPerNode,
    ServiceCidrPrefix = toint(split(ServiceCidr, '/')[1]),
    TotalServiceIps = iff(isnotempty(ServiceCidr), pow(2, 32 - ServiceCidrPrefix) - 2, 0),
    AvailableServiceIps = max_of(TotalServiceIps - 1, 0),
    MaxNodesFromPodCidr = floor(TotalPodIps / 254),
    AvailableNodes = max_of(MaxNodesFromPodCidr - TotalNodes, 0)
| project 
    AKSName, PodCidr, TotalPodIps, AvailablePodIps, MaxPodsTotal, ServiceCidr, TotalServiceIps, AvailableServiceIps, TotalNodes, AvailableNodes
| order by AKSName asc


Resources
| where type == "microsoft.containerservice/managedclusters"
| extend 
    AKSName = name,
    SubscriptionName = subscriptionId,
    ResourceGroup = resourceGroup,
    NetworkPlugin = properties.networkProfile.networkPlugin,
    PodCidr = properties.networkProfile.podCidr,
    ServiceCidr = properties.networkProfile.serviceCidr,
    NodePools = properties.agentPoolProfiles,
    NodePoolCount = array_length(NodePools),
    TotalNodes = iff(array_length(NodePools) > 0, 
                     sumif(todynamic(NodePools).count, NodePools, todynamic(NodePools).enableAutoScaling == false) + 
                     sumif(todynamic(NodePools).nodeCount, NodePools, todynamic(NodePools).enableAutoScaling == true), 
                     0),
    MaxPodsPerNode = iff(array_length(NodePools) > 0, 
                         maxof(todynamic(NodePools).maxPods), 
                         30),
    NodePoolNames = iff(array_length(NodePools) > 0, 
                        make_list(todynamic(NodePools).name), 
                        make_list("N/A"))
| extend 
    PodCidrPrefix = toint(split(PodCidr, '/')[1]),
    TotalPodIps = iff(isnotempty(PodCidr), pow(2, 32 - PodCidrPrefix) - 2, 0),
    AllocatedPodIps = TotalNodes * (pow(2, 24 - 8) - 2),
    AvailablePodIps = max_of(TotalPodIps - AllocatedPodIps, 0),
    MaxPodsTotal = TotalNodes * MaxPodsPerNode,
    ServiceCidrPrefix = toint(split(ServiceCidr, '/')[1]),
    TotalServiceIps = iff(isnotempty(ServiceCidr), pow(2, 32 - ServiceCidrPrefix) - 2, 0),
    AvailableServiceIps = max_of(TotalServiceIps - 1, 0),
    MaxNodesFromPodCidr = floor(TotalPodIps / 254),
    AvailableNodes = max_of(MaxNodesFromPodCidr - TotalNodes, 0)
| project 
    AKSName, SubscriptionName, ResourceGroup, NetworkPlugin, PodCidr, TotalPodIps, AvailablePodIps, MaxPodsTotal, 
    ServiceCidr, TotalServiceIps, AvailableServiceIps, TotalNodes, AvailableNodes, NodePoolCount, NodePoolNames
| order by AKSName asc
