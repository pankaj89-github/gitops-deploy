apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: prevent-cross-namespace-virtualservice-hosts
  annotations:
    policies.kyverno.io/title: Prevent Cross-Namespace VirtualService Host Overlap
    policies.kyverno.io/category: Istio
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: VirtualService
    policies.kyverno.io/description: >-
      Ensures that VirtualService hosts in one namespace do not overlap with hosts
      (including wildcards) defined in VirtualServices in other namespaces to prevent
      traffic routing conflicts in multi-tenant AKS Istio service mesh deployments.
spec:
  validationFailureAction: Enforce
  background: false
  rules:
    - name: prevent-exact-host-overlap
      match:
        any:
          - resources:
              kinds:
                - VirtualService
              namespaceSelector:
                matchExpressions:
                  - key: kubernetes.io/metadata.name
                    operator: NotIn
                    values:
                      - aks-istio-system
                      - aks-istio-ingress
                      - aks-istio-egress
      exclude:
        any:
          - resources:
              namespaces:
                - aks-istio-system
                - aks-istio-ingress
                - aks-istio-egress
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: AnyIn
            value: ["CREATE", "UPDATE"]
          - key: "{{ request.object.spec.hosts || [] }}"
            operator: NotEquals
            value: []
      context:
        - name: existingHosts
          apiCall:
            urlPath: "/apis/networking.istio.io/v1beta1/virtualservices"
            jmesPath: "items[?metadata.namespace != '{{ request.namespace }}' && metadata.namespace != 'aks-istio-system' && metadata.namespace != 'aks-istio-ingress' && metadata.namespace != 'aks-istio-egress'].spec.hosts[] || []"
      validate:
        foreach:
          - list: "request.object.spec.hosts[]"
            deny:
              conditions:
                any:
                  - key: "{{ element }}"
                    operator: In
                    value: "{{ existingHosts }}"
              message: "Host '{{ element }}' is already used in another namespace."
    - name: prevent-wildcard-host-overlap
      match:
        any:
          - resources:
              kinds:
                - VirtualService
              namespaceSelector:
                matchExpressions:
                  - key: kubernetes.io/metadata.name
                    operator: NotIn
                    values:
                      - aks-istio-system
                      - aks-istio-ingress
                      - aks-istio-egress
      exclude:
        any:
          - resources:
              namespaces:
                - aks-istio-system
                - aks-istio-ingress
                - aks-istio-egress
      preconditions:
        all:
          - key: "{{ request.operation || 'BACKGROUND' }}"
            operator: AnyIn
            value: ["CREATE", "UPDATE"]
          - key: "{{ request.object.spec.hosts || [] }}"
            operator: NotEquals
            value: []
      context:
        - name: existingHosts
          apiCall:
            urlPath: "/apis/networking.istio.io/v1/virtualservices"
            jmesPath: "items[?metadata.namespace != '{{ request.namespace }}' && metadata.namespace != 'aks-istio-system' && metadata.namespace != 'aks-istio-ingress' && metadata.namespace != 'aks-istio-egress'].spec.hosts[] || []"
      validate:
        foreach:
          - list: "request.object.spec.hosts[]"
            deny:
              conditions:
                any:
                  - key: "{{ existingHosts[?contains(@, '*') && regex_match(replace(@, '*', '.*'), '{{ element }}') && '{{ element }}' != ''] | [0] }}"
                    operator: NotEquals
                    value: ""
                  - key: "{{ existingHosts[?contains('{{ element }}', '*') && regex_match(replace('{{ element }}', '*', '.*'), @) && @ != ''] | [0] }}"
                    operator: NotEquals
                    value: ""
              message: "Host '{{ element }}' conflicts with a wildcard host in another namespace."
